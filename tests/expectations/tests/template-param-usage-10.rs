/* automatically generated by rust-bindgen */

pub use self::root::*;

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::*;
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct DoublyIndirectUsage<T, U> {
        pub doubly_indirect: DoublyIndirectUsage_IndirectUsage<T, U>,
    }
    pub type DoublyIndirectUsage_Aliased<T> = T;
    pub type DoublyIndirectUsage_Typedefed<U> = U;
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct DoublyIndirectUsage_IndirectUsage<T, U> {
        pub member: DoublyIndirectUsage_Aliased<T>,
        pub another: DoublyIndirectUsage_Typedefed<U>,
    }
    impl <T, U> Default for DoublyIndirectUsage_IndirectUsage<T, U> {
        fn default() -> Self { unsafe { ::std::mem::zeroed() } }
    }
    impl <T, U> Default for DoublyIndirectUsage<T, U> {
        fn default() -> Self { unsafe { ::std::mem::zeroed() } }
    }
}
