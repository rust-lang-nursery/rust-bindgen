/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


#[repr(C)]
pub struct nsSlots__bindgen_vtable(::std::os::raw::c_void);
#[repr(C)]
#[derive(Debug)]
pub struct nsSlots {
    pub vtable_: *const nsSlots__bindgen_vtable,
}
#[test]
fn bindgen_test_layout_nsSlots() {
    assert_eq!(::std::mem::size_of::<nsSlots>() , 8usize , concat ! (
               "Size of: " , stringify ! ( nsSlots ) ));
    assert_eq! (::std::mem::align_of::<nsSlots>() , 8usize , concat ! (
                "Alignment of " , stringify ! ( nsSlots ) ));
}
extern "C" {
    #[link_name = "_ZN7nsSlotsD1Ev"]
    pub fn nsSlots_nsSlots_destructor(this: *mut nsSlots);
}
impl Default for nsSlots {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
impl nsSlots {
    #[inline]
    pub unsafe fn __bindgen_destructor__(&mut self) {
        nsSlots_nsSlots_destructor(&mut *self)
    }
}
