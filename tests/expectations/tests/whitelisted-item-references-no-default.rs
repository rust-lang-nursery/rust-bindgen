/* automatically generated by rust-bindgen */

#![allow(
    dead_code,
    non_snake_case,
    non_camel_case_types,
    non_upper_case_globals
)]

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NoDefault {
    pub _address: u8,
}
#[test]
fn bindgen_test_layout_NoDefault() {
    assert_eq!(
        ::std::mem::size_of::<NoDefault>(),
        1usize,
        concat!("Size of: ", stringify!(NoDefault))
    );
    assert_eq!(
        ::std::mem::align_of::<NoDefault>(),
        1usize,
        concat!("Alignment of ", stringify!(NoDefault))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Whitelisted {
    pub x: NoDefault,
}
#[test]
fn bindgen_test_layout_Whitelisted() {
    assert_eq!(
        ::std::mem::size_of::<Whitelisted>(),
        1usize,
        concat!("Size of: ", stringify!(Whitelisted))
    );
    assert_eq!(
        ::std::mem::align_of::<Whitelisted>(),
        1usize,
        concat!("Alignment of ", stringify!(Whitelisted))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<Whitelisted>())).x as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Whitelisted),
            "::",
            stringify!(x)
        )
    );
}
