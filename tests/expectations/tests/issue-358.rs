/* automatically generated by rust-bindgen */

pub use self::root::*;

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::*;
    #[repr(C)]
    #[derive(Debug, Copy, Clone)]
    pub struct JS_PersistentRooted {
        pub _base: a,
    }
    impl Default for JS_PersistentRooted {
        fn default() -> Self { unsafe { ::std::mem::zeroed() } }
    }
    #[repr(C)]
    #[derive(Debug, Copy)]
    pub struct a {
        pub b: *mut a,
    }
    impl Clone for a {
        fn clone(&self) -> Self { *self }
    }
    impl Default for a {
        fn default() -> Self { unsafe { ::std::mem::zeroed() } }
    }
}
