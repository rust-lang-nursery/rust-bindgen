/* automatically generated by rust-bindgen */


#![allow(non_snake_case)]


extern "C" {
    #[link_name = "_Z3foov"]
    pub fn foo() -> bool;
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct C {
    pub _address: u8,
}
#[test]
fn bindgen_test_layout_C() {
    assert_eq!(::std::mem::size_of::<C>() , 1usize);
    assert_eq!(::std::mem::align_of::<C>() , 1usize);
}
extern "C" {
    #[link_name = "_ZN1C3fooEv"]
    pub fn C_foo();
}
extern "C" {
    #[link_name = "_ZN1C3barEv"]
    pub fn C_bar() -> bool;
}
impl Clone for C {
    fn clone(&self) -> Self { *self }
}
impl C {
    #[inline]
    pub unsafe fn foo() { C_foo() }
    #[inline]
    pub unsafe fn bar() -> bool { C_bar() }
}
